name: Release Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.4.10)'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [win32-x64, darwin-x64, darwin-arm64, linux-x64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build application
        run: |
          yarn gulp compile
          yarn gulp vscode-${{ matrix.platform }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release assets
        run: |
          # Create zip files for each platform
          cd VSCode-${{ matrix.platform }}
          zip -r ../void-${{ matrix.platform }}-${{ github.ref_name }}.zip .

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: void-${{ matrix.platform }}-${{ github.ref_name }}
          path: void-${{ matrix.platform }}-${{ github.ref_name }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            void-*-${{ github.ref_name }}.zip
          body: |
            ## What's New in ${{ github.ref_name }}

            ### Downloads
            - Windows x64: `void-win32-x64-${{ github.ref_name }}.zip`
            - macOS Intel: `void-darwin-x64-${{ github.ref_name }}.zip`
            - macOS Apple Silicon: `void-darwin-arm64-${{ github.ref_name }}.zip`
            - Linux x64: `void-linux-x64-${{ github.ref_name }}.zip`

            ### OTA Updates
            This release supports automatic over-the-air updates via GitHub releases.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
